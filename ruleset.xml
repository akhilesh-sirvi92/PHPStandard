<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="mr-chetan-ruleset" namespace="MrChetan\Standard">

    <!-- PSR1 Rule set -->
    <rule ref="PSR1"/>

    <!--
        ***********************************************************************
        *   Arrays Rule set
        ***********************************************************************
     -->

    <!-- Generic -->
    <rule ref="Generic.Arrays.ArrayIndent"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Squiz -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
    </rule>

    <!--
        ***********************************************************************
        *   Classes Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.Classes.AnonClassDeclaration"/>
    <rule ref="PSR12.Classes.ClosingBrace"/>

    <!-- Squiz -->
    <rule ref="Squiz.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>

    <!--
        ***********************************************************************
        *   Code Analysis Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <properties>
            <property name="ignoreTypeHints" type="array">
                <element value="InputInterface"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <!--
        ***********************************************************************
        * Commenting Rule set
        ***********************************************************************
    -->
    <!-- Generic -->
    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Generic.Commenting.Fixme">
        <type>warning</type>
    </rule>
    <rule ref="Generic.Commenting.Todo"/>

    <!-- Squiz -->
    <rule ref="Squiz.Commenting.BlockComment"/>
    <rule ref="Squiz.Commenting.ClassComment">
        <exclude name="Squiz.Commenting.ClassComment.Missing" />
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed" />
    </rule>
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.Commenting.FunctionComment">
        <properties>
            <property name="minimumVisibility" value="protected" />
        </properties>
        <exclude name="Squiz.Commenting.FunctionComment.Missing" />
    </rule>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
    <rule ref="Squiz.Commenting.InlineComment"/>
    <rule ref="Squiz.Commenting.LongConditionClosingComment"/>
    <rule ref="Squiz.Commenting.VariableComment"/>

    <!--
        ***********************************************************************
        * Control Structures Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace">
        <severity>0</severity>
    </rule>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>

    <!-- PSR12 -->
    <rule ref="PSR12.ControlStructures.BooleanOperatorPlacement"/>
    <rule ref="PSR12.ControlStructures.ControlStructureSpacing"/>

    <!-- Generic -->
    <rule ref="Generic.ControlStructures.DisallowYodaConditions">
        <type>warning</type>
    </rule>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <!-- Squiz -->
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration">
        <!-- exclude this message as it is already checked in Generic.PHP.LowerCaseKeyword -->
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower"/>
    </rule>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration">
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent"/>
    </rule>

    <!--
        ***********************************************************************
        * Files Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Files.ClosingTag"/>
    <rule ref="PSR2.Files.EndFileNewline"/>

    <!-- PSR12 -->
    <rule ref="PSR12.Files.DeclareStatement"/>
    <rule ref="PSR12.Files.FileHeader"/>
    <rule ref="PSR12.Files.ImportStatement"/>

    <!-- Generic -->
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="ignoreComments" value="true" />
            <property name="lineLimit" value="80"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Formatting Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <properties>
            <property name="maxPadding" value="12"/>
            <property name="error" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterNot"/>

    <!-- PEAR -->
    <rule ref="PEAR.Formatting.MultiLineAssignment"/>

    <!--
        ***********************************************************************
        * Functions Rule set
        ***********************************************************************
    -->

    <!-- PSR12  -->
    <rule ref="PSR12.Functions.NullableTypeDeclaration"/>
    <rule ref="PSR12.Functions.ReturnTypeDeclaration"/>

    <!-- Generic -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>

    <!-- PEAR -->
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.Functions.FunctionCallSignature"/>

    <!-- Squiz -->
     <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>

    <!--
        ***********************************************************************
        * Keywords Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Keywords.ShortFormTypeKeywords"/>

    <!--
        ***********************************************************************
        * Operators Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Operators.OperatorSpacing"/>

    <!-- Squiz -->
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>

    <!--
        ***********************************************************************
        * Methods Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!--
        ***********************************************************************
        * Metrics Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>

    <!--
        ***********************************************************************
        * Namespaces Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration">
        <exclude name="PSR2.Namespaces.UseDeclaration.MultipleDeclarations"/>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.Namespaces.CompoundNamespaceDepth"/>

    <!--
        ***********************************************************************
        * Naming Conventions Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <!-- Squiz -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName"/>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
    </rule>

    <!--
        ***********************************************************************
        * Objects Rule set
        ***********************************************************************
    -->

    <!-- Squiz -->
    <rule ref="Squiz.Objects.ObjectInstantiation"/>

    <!-- -->
    <!--
        ***********************************************************************
        * PHP Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" value="true"/>
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.PHP.CommentedOutCode"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>

    <!--
        ***********************************************************************
        * Properties Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Properties.ConstantVisibility"/>

    <!--
        ***********************************************************************
        * Strings Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true" />
            <property name="error" value="false" />
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
    </rule>

    <!--
        ***********************************************************************
        * Scope Rule set
        ***********************************************************************
    -->

    <!-- Squiz -->
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>

    <!--
        ***********************************************************************
        * Traits Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Traits.UseDeclaration"/>
    <rule ref="PSR12.Traits.UseDeclaration.MultipleImport">
        <type>warning</type>
    </rule>

    <!--
        ***********************************************************************
        * Version Control Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.VersionControl.GitMergeConflict"/>


    <!--
        ***********************************************************************
        * WhiteSpace Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT"/>
                <element value="T_DOC_COMMENT_OPEN_TAG"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter"/>

    <!-- PEAR -->
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>

    <!-- Squiz -->
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace">
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing" >
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
            <property name="spacingAfterLast" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <!-- ignore patterns  -->
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*.blade.php</exclude-pattern>
</ruleset>
